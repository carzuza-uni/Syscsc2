// <auto-generated />
using Datos;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Datos.Migrations
{
    [DbContext(typeof(SyscscContext))]
    [Migration("20200512073036_AddTablaProveedores")]
    partial class AddTablaProveedores
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Entity.Agroclimatica", b =>
                {
                    b.Property<int>("AgroclimaticaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AnalisisSuelo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Este")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FechaRealizacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Latitud")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MSNM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NorteLongitud")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlanFertilizacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreparacionAbono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProveedorId")
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoTextura")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AgroclimaticaId");

                    b.HasIndex("ProveedorId")
                        .IsUnique();

                    b.ToTable("Agroclimatica");
                });

            modelBuilder.Entity("Entity.Cultivo", b =>
                {
                    b.Property<int>("CultivoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CultivoId");

                    b.ToTable("Cultivos");
                });

            modelBuilder.Entity("Entity.DatosFamilia", b =>
                {
                    b.Property<int>("Identificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AfilicionSalud")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FechaNacimiento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NivelEducativo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Parentesco")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProveedorId")
                        .HasColumnType("int");

                    b.Property<string>("TipoPoblacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Identificacion");

                    b.HasIndex("ProveedorId");

                    b.ToTable("DatosFamilia");
                });

            modelBuilder.Entity("Entity.InsumoExterno", b =>
                {
                    b.Property<int>("AgroclimaticaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AnalisisSuelo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Este")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FechaRealizacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Latitud")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MSNM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NorteLongitud")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlanFertilizacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreparacionAbono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProveedorId")
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoTextura")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AgroclimaticaId");

                    b.HasIndex("ProveedorId");

                    b.ToTable("InsumoExterno");
                });

            modelBuilder.Entity("Entity.InsumoInterno", b =>
                {
                    b.Property<int>("InsumoInternoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cantidad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dosis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FechaAplicacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LugarAplicacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaterialesUsado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MetodoPreparacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Procedimiento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProveedorId")
                        .HasColumnType("int");

                    b.Property<string>("TiempoPreparacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InsumoInternoId");

                    b.HasIndex("ProveedorId");

                    b.ToTable("InsumoInterno");
                });

            modelBuilder.Entity("Entity.Municipio", b =>
                {
                    b.Property<int>("CultivoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CultivoId");

                    b.ToTable("Municipios");
                });

            modelBuilder.Entity("Entity.Proveedor", b =>
                {
                    b.Property<int>("ProveedorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Actividades")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AfiliacionSalud")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cedula")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CedulaCafetera")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodigoFinca")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodigoSICA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MunicipioId")
                        .HasColumnType("int");

                    b.Property<string>("NombrePredio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProveedorId");

                    b.HasIndex("MunicipioId");

                    b.ToTable("Proveedores");
                });

            modelBuilder.Entity("Entity.Usuario", b =>
                {
                    b.Property<string>("NumeroCedula")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Contrasena")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreCompleto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimerApellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimerNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SegundoApellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SegundoNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoUsuario")
                        .HasColumnType("int");

                    b.Property<string>("TipoUsuarioNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioI")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NumeroCedula");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Entity.Agroclimatica", b =>
                {
                    b.HasOne("Entity.Proveedor", null)
                        .WithOne("Agroclimatica")
                        .HasForeignKey("Entity.Agroclimatica", "ProveedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Entity.DatosFamilia", b =>
                {
                    b.HasOne("Entity.Proveedor", null)
                        .WithMany("DatosFamilias")
                        .HasForeignKey("ProveedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Entity.InsumoExterno", b =>
                {
                    b.HasOne("Entity.Proveedor", null)
                        .WithMany("InsumoExternos")
                        .HasForeignKey("ProveedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Entity.InsumoInterno", b =>
                {
                    b.HasOne("Entity.Proveedor", null)
                        .WithMany("InsumoInternos")
                        .HasForeignKey("ProveedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Entity.Proveedor", b =>
                {
                    b.HasOne("Entity.Municipio", "Municipio")
                        .WithMany()
                        .HasForeignKey("MunicipioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
